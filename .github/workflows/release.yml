on:
  workflow_dispatch:
    inputs:
      core:
        description: "Version of the core. Must go with v (e.g v0.2.47)"
        required: true
      dappmanager:
        description: "Version of the dappmanager. Only numbers"
        required: true
      wifi:
        description: "Version of the wifi. Only numbers"
        required: true
      bind:
        description: "Version of the bind. Only numbers"
        required: true
      ipfs:
        description: "Version of the ipfs. Only numbers"
        required: true
      https:
        description: "Version of the https. Only numbers"
        required: true
      wireguard:
        description: "Version of the wireguard. Only numbers"
        required: true
      vpn:
        description: "Version of the vpn. Only numbers"
        required: true

jobs:
  pre-release:
    name: create pre release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out installer
        uses: actions/checkout@master
        with:
          repository: dappnode/DAppNode_Installer
      - name: Define envs
        run: echo "Defining envs vars"
        env:
          BIND_VERSION: ${{ github.events.inputs.bind }}
          IPFS_VERSION: ${{ github.events.inputs.ipfs }}
          DAPPMANAGER_VERSION: ${{ github.events.inputs.dappmanager }}
          WIFI_VERSION: ${{ github.events.inputs.wifi }}
          WIREGUARD_VERSION: ${{ github.events.inputs.wireguard }}
          HTTPS_VERSION: ${{ github.events.inputs.https }}
          VPN_VERSION: ${{ github.events.inputs.vpn }}
          CORE_VERSION: ${{ github.events.inputs.core }}
      - name: Set new versions
        run: |
          [ ! -z "${BIND_VERSION}" ] && sed -i -e "/BIND_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${BIND_VERSION}"/" .dappnode_profile
          [ ! -z "${IPFS_VERSION}" ] && sed -i -e "/IPFS_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${IPFS_VERSION}"/" .dappnode_profile
          [ ! -z "${VPN_VERSION}" ] && sed -i -e "/VPN_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${VPN_VERSION}"/" .dappnode_profile
          [ ! -z "${DAPPMANAGER_VERSION}" ] && sed -i -e "/DAPPMANAGER_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${DAPPMANAGER_VERSION}"/" .dappnode_profile
          [ ! -z "${WIFI_VERSION}" ] && sed -i -e "/WIFI_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${WIFI_VERSION}"/" .dappnode_profile
          [ ! -z "${WIREGUARD_VERSION}" ] && sed -i -e "/WIREGUARD_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${WIREGUARD_VERSION}"/" .dappnode_profile
          [ ! -z "${HTTPS_VERSION}" ] && sed -i -e "/HTTPS_VERSION/s/[0-9]*\.[0-9]*\.[0-9]*/"${HTTPS_VERSION}"/" .dappnode_profile
      - name: Build
        run: |
          docker-compose build
          docker-compose up
      - name: Check iso
        run: |
          ls -lrt images/DAppNode-debian-bullseye-amd64.iso

      - name: Create dappnode_profile.sh
        run: |
          cp .dappnode_profile dappnode_profile.sh
      - name: Pre release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${CORE_VERSION}
          prerelease: true
          files: |
            ./images/DAppNode-debian-bullseye-amd64.iso
            ./scripts/dappnode_install.sh
            ./scripts/dappnode_install_pre.sh
            ./scripts/dappnode_uninstall.sh
            ./scripts/dappnode_access_credentials.sh
            dappnode_profile.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
